밑바닥부터 시작하는 딥러닝 

지은이 : 사이토 고키
옮긴이 : 개잎맵시
출판일 : 2017년 1월 17일 


Chapter 1. 파이썬
 1. 파이썬 스크립트 파일
  1.1 파일로 저장하기
  1.2 클래스

 2. 넘파이
  2.1 넘파이 가져오기
  2.2 넘파이 배열 생성하기
  2.3 넘파이의 산술 연산
  2.4 넘파이의 N차원 배열
  2.5 브로드캐스트
  2.6 원소 접급

 3. matplotlib
  3.1 단순한 그래프 그리기
  3.2 pyplot의 기능
  3.3 이미지 표시하기

 4. 정리


Chapter 2. 퍼셉트론
 1. 퍼셉트론이란?
 
 2. 단순한 논리 회로
  2.1 AND 게이트
  2.2 NAND 게이트와 OR 게이트

 3. 퍼셉트론 구현하기
  3.1 간단한 구현부터
  3.2 가중치와 편향 도입 
  3.3 가중치와 편향 구현하기 

 4. 퍼셉트론의 한계
  4.1 도전! XOR 게이트
  4.2 선현과 비선형

 5. 다층 퍼셉트론이 출동한다면
  5.1 기존 게이트 조합하기
  5.2 XOR 게이트 구현하기

 6. NAND에서 컴퓨터까지
 
 7. 정리


Chapter 3. 신경망
 1. 퍼셉트론에서 신경망으로
  1.1 신경망의 예
  1.2 퍼셉트론 복습
  1.3 활성화 함수의 등장

 2. 활성화 함수
  2.1 시그모이드 함수
  2.2 계단 함수 구현하기
  2.3 계단 함수의 그래프
  2.4 시그모이드 함수 구현하기
  2.5 시그모이드 함수와 계단 함수 비교
  2.6 비선형 함수
  2.7 ReLU 함수

 3. 다차원 배열의 계산
  3.1 다차원 배열
  3.2 행렬의 곱
  3.3 신경망에서의 행렬 곱

 4. 3층 신경망 구현하기
  4.1 표기법 설명
  4.2 각 층의 신호 전달 구현하기
  4.3 구현 정리

 5. 출력층 설계하기
  5.1 항등 함수와 소프트맥스 함수 구현하기
  5.2 소프트맥스 함수 구현 시 주의점
  5.3 소프트맥스 함수의 특징
  5.4 출력층의 뉴런 수 정하기 

 6. 손글씨 숫자 인식
  6.1 MNIST 데이터셋
  6.2 신경망의 추론 처리
  6.3 배치 처리

 7. 정리


Chapter 4. 신경망 학습
 1. 데이터에서 학습한다
  1.1 데이터 주도 학습
  1.2 훈련 데이터와 시험 데이터

 2. 손실 함수
  2.1 오차제곱합
  2.2 교차 엔트로피 오차
  2.3 미니배치 학습
  2.4 (배치용) 교차 엔트로피 오차 구현하기
  2.5 왜 손실 함수를 설정하는가?

 3. 수치 미분
  3.1 미분
  3.2 수치 미분의 예
  3.3 편미분

 4. 기울기
  4.1 경사법
  4.2 신경망에서의 기울기

 5. 학습 알고리즘 구현하기
  5.1 2층 신경망 클래스 구현하기
  5.2 미니배치 학습 구현하기
  5.3 시험 데이터로 평가하기

 6. 정리


Chapter 5. 오차역전파법
 1. 계산 그래프
  1.1 계산 그래프로 풀다
  1.2 국소적 계산
  1.3 왜 계산 그래프로 푸는가?

 2. 연쇄법칙
  2.1 계산 그래프의 역전파
  2.2 연쇄법칙이란?
  2.3 연쇄법칙과 계산 그래프

 3. 역전파
  3.1 덧셈 노드의 역전파
  3.2 곱셉 노드의 역전파
  3.3 사과 쇼핑의 예

 4. 단순한 계층 구현
  4.1 곱셈 계층
  4.2 덧셈 계층

 5. 활성화 함수 계층 구현하기
  5.1 ReLU 계층
  5.2 Sigmoid 계층

 6. Afifine/Softmax 계층 구현하기
  6.1 Affine 계층
  6.2 배치용 Affine 계층
  6.3 Softmax-with-Loss 계층

 7. 오차역전파법 구현하기
  7.1 신경망 학습의 전체 그림
  7.2 오차역전파법을 적용한 신경망 구현하기
  7.3 오차역전파법으로 구한 기울기 검증하기
  7.4 오차역전파법을 사용한 학습 구현하기


Chapter 6. 학습 관련 기술들
 1. 매개변수 갱신
  1.1 모험가 이야기
  1.2 확률적 경사 하강법(SGD)
  1.3 SGD의 단점
  1.4 모멘텀
  1.5 AdaGrad
  1.6 Adam
  1.7 어느 갱신 방법을 이용할 것인가?
  1.8 MNIST 데이터셋으로 본 갱신 방법 비교

 2. 가중치의 초기값
  2.1 초기값을 0으로 하면?
  2.2 은닉층의 활성화값 분포
  2.3 ReLU를 사용할 때의 가중치 초기값
  2.4 MNIST 데이터셋으로 본 가중치 초기값 비교

 3. 배치 정규화
  3.1 배치 정규화 알고리즘
  3.2 배치 정규화의 효과

 4. 바른 학습을 위해
  4.1 오버피팅
  4.2 가중치 감소
  4.3 드롭아웃

 5. 적절한 하이퍼파라미터 값 찾기
  5.1 검증 데이터
  5.2 하이퍼파라미터 최적화
  5.3 하이퍼파라미터 최적화 구현하기

 6. 정리


Chapter 7.합성곱 신경망(CNN)
 1. 전체 구조
 
 2. 합성곱 계층
  2.1 완전연결 계층의 문제점
  2.2 합성곱 연산
  2.3 패딩
  2.4 스트라이드
  2.5 3차원 데이터의 합성곱 연산
  2.6 블록으로 생각하기
  2.7 배치 처리

 3. 풀링 계층
  3.1 풀링 계층의 특징

 4. 합성곱/풀링 계층 구현하기
  4.1 4차원 배열
  4.2 im2col로 데이터 전개하기
  4.3 합성곱 계층 구현하기
  4.4 풀링 계층 구현하기

 5. CNN 구현하기
 
 6. CNN 시각화하기
  6.1 1번째 층의 가중치 시각화하기
  6.2 층 깊이에 따른 추출 정보 변화

 7. 대표적인 CNN
  7.1 LeNet
  7.2 AlexNet

 8. 정리


Chapter 8. 딥러닝
 1. 더 깊게
  1.1 더 깊은 신경망으로
  1.2 정확도를 더 높이려면
  1.3 깊게 하는 이유

 2. 딥러닝의 초기 역사
  2.1 이미지넷
  2.2 VGG
  2.3 GoogLeNet
  2.4 ResNet

 3. 더 빠르게(딥러닝 고속화)
  3.1 풀어야 할 숙제
  3.2 GPU를 활용한 고속화
  3.3 분산 학습
  3.4 연산 정밀도와 비트 줄이기

 4. 딥러닝의 활용
  4.1 사물 검출
  4.2 분할
  4.3 사진 캡션 생성

 5. 딥러닝의 미래
  5.1 이미지 스타일(화풍) 변환
  5.2 이미지 생성
  5.3 자율 주행
  5.4 Deep Q-Network(강화학습)

 6. 정리


APPENDIZ A. Softmax-with-Loss 계층의 계산 그래프
 1. 순전파

 2. 역전파
 
 3. 정리